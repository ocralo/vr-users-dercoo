{"version":3,"sources":["App.js","serviceWorker.js","firebaseConfig.js","index.js"],"names":["App","useState","FlagVideo","setFlagVideo","UserName","setUserName","Cont","setCont","Progression","setProgression","unityContent","UnityContent","process","on","flag","parseInt","i","name","progressionVal","storage","firebase","database","capturing","setCapturing","recordedChunks","setRecordedChunks","webcamRef","useRef","mediaRecorderRef","handleDataAvailable","useCallback","data","size","prev","concat","handleStartCaptureClick","current","MediaRecorder","stream","mimeType","addEventListener","start","handleStopCaptureClick","stop","handleSend","userName","console","log","length","blob","Blob","type","ref","put","then","snapshot","getDownloadURL","downloadURL","update","url","send","URL","createObjectURL","a","document","createElement","body","appendChild","style","href","download","click","window","revokeObjectURL","class","src","width","alt","className","height","display","role","aria-valuenow","aria-valuemin","aria-valuemax","Math","round","audio","maxHeight","listStyleType","onClick","Boolean","location","hostname","match","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.993c9259.chunk.js","sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport Webcam from \"react-webcam\";\n\nimport * as firebase from \"firebase\";\n\nfunction App() {\n  const [FlagVideo, setFlagVideo] = useState(0);\n  const [UserName, setUserName] = useState(\"\");\n  const [Cont, setCont] = useState(1);\n  const [Progression, setProgression] = useState(0);\n\n  const unityContent = new UnityContent(\n    process.env.PUBLIC_URL + \"/MyGame/360_vr_derco_build.json\",\n    process.env.PUBLIC_URL + \"/MyGame/UnityLoader.js\"\n  );\n\n  const nextQuestion = () => {\n    console.log(\"gg\");\n    unityContent.send(\"Menu\", \"nextQuestion\");\n  };\n\n  unityContent.on(\"createVideo\", (flag) => {\n    setFlagVideo(parseInt(flag));\n  });\n\n  unityContent.on(\"numberQuestion\", (i) => {\n    setCont(i);\n  });\n\n  unityContent.on(\"userName\", (name) => {\n    setUserName(name);\n  });\n\n  unityContent.on(\"progress\", (progressionVal) => {\n    setProgression(progressionVal * 100);\n  });\n\n  /* firebase  */\n  const storage = firebase.storage();\n  const database = firebase.database();\n\n  /* videoCapturing */\n  const [capturing, setCapturing] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const handleDataAvailable = useCallback(\n    ({ data }) => {\n      if (data.size > 0) {\n        setRecordedChunks((prev) => prev.concat(data));\n      }\n    },\n    [setRecordedChunks]\n  );\n\n  const handleStartCaptureClick = useCallback(() => {\n    setCapturing(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: \"video/webm\",\n    });\n    mediaRecorderRef.current.addEventListener(\n      \"dataavailable\",\n      handleDataAvailable\n    );\n    mediaRecorderRef.current.start();\n  }, [handleDataAvailable]);\n\n  const handleStopCaptureClick = useCallback(() => {\n    mediaRecorderRef.current.stop();\n    setCapturing(false);\n  }, [mediaRecorderRef]);\n\n  const handleSend = useCallback(() => {\n    const userName = UserName;\n    console.log(userName);\n    if (recordedChunks.length) {\n      const blob = new Blob(recordedChunks, {\n        type: \"video/webm\",\n      });\n\n      /* send data to firebase */\n      const storageRef = storage.ref(\n        `/videos/${userName}/pregunta-${Cont}.webm`\n      );\n      storageRef.put(blob).then(function (snapshot) {\n        snapshot.ref.getDownloadURL().then((downloadURL) => {\n          console.log(downloadURL);\n          database\n            .ref(`users/${userName}/answers/${Cont}`)\n            .update({ url: downloadURL });\n          nextQuestion();\n          setFlagVideo(0);\n          setCont(2);\n        });\n        console.log(\"Uploaded a blob or file!\");\n      });\n\n      /* end sed data to firebase */\n\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.style = \"display: none\";\n      a.href = url;\n      a.download = `video-${userName}-pregunta-${Cont}.webm`;\n      a.click();\n      window.URL.revokeObjectURL(url);\n      setRecordedChunks([]);\n    }\n  }, [Cont, UserName, recordedChunks, storage]);\n\n  return (\n    <>\n      <nav class=\"navbar navbar-dark bg-dark\">\n        <a class=\"navbar-brand d-flex align-items-center\" /* href=\"#\" */>\n          <img\n            src={`${process.env.PUBLIC_URL}/img/logo.png`}\n            width=\"130\"\n            /* height=\"30\" */\n            class=\"d-inline-block align-top mr-2\"\n            alt=\"\"\n          />\n          Assessent VR\n        </a>\n      </nav>\n      <div className=\"container-fluid\">\n        <div className=\"row justify-content-center mt-4\">\n          <div\n            className=\"col-md-10\"\n            style={{\n              height: \"35em\",\n              display: FlagVideo !== 1 ? \"block\" : \"none\",\n            }}\n          >\n            <Unity unityContent={unityContent} />\n            {Progression >= 100 ? (\n              \"\"\n            ) : (\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar\"\n                  role=\"progressbar\"\n                  style={{ width: `${Progression}%` }}\n                  aria-valuenow={Progression}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                >{`${Math.round(Progression)}%`}</div>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"row justify-content-center\">\n          {FlagVideo === 1 ? (\n            <div className=\"col-md-10\">\n              {/* <Webcam audio={true} videoConstraints={videoConstraints} /> */}\n\n              <div className=\"container-fluid\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <h1 className=\"text-center text-primary\">\n                      Espera hasta verte, para darle al boton \"Iniciar\n                      Grabación\"\n                    </h1>\n\n                    <h6 className=\"text-center\">\n                      Según la pregunta anterior, comparta su respuesta,\n                      pulsando en el botón iniciar grabación.\n                    </h6>\n                  </div>\n                </div>\n\n                <div className=\"row justify-content-center mt-2\">\n                  <div className=\"col-md-8\">\n                    <Webcam\n                      className=\"embed-responsive mt\"\n                      audio={true}\n                      ref={webcamRef}\n                      style={{ maxHeight: \"35em\" }}\n                    />\n                  </div>\n                  <div className=\"col-md-4\">\n                    <h4>Pasos :</h4>\n                    <ul style={{listStyleType: \"decimal\"}}>\n                      <li>\n                        <h6>Asigna el permiso a la cámara de tu computador</h6>\n                      </li>\n                      <li>\n                        <h6>\n                          Una vez tu imagen aparezca en el recuadro, haz clic en\n                          el botón “Iniciar grabación”\n                        </h6>\n                      </li>\n                      <li>\n                        <h6>\n                          Finalizada la respuesta, haz clic en el botón “ Para\n                          Grabación”\n                        </h6>\n                      </li>\n                      <li>\n                        <h6>\n                          Finalmente haz clic en el botón “Descargar y enviar\n                          respuesta”\n                        </h6>\n                      </li>\n                    </ul>\n                    {capturing ? (\n                      <button\n                        className=\"btn btn-danger btn-lg btn-block m-2\"\n                        onClick={handleStopCaptureClick}\n                      >\n                        Parar Grabación\n                      </button>\n                    ) : !(recordedChunks.length > 0) ? (\n                      <button\n                        className=\"btn btn-primary btn-lg btn-block m-2\"\n                        onClick={handleStartCaptureClick}\n                      >\n                        Iniciar Grabación\n                      </button>\n                    ) : (\n                      \"\"\n                    )}\n                    {recordedChunks.length > 0 && (\n                      <button\n                        className=\"btn btn-success btn-lg btn-block m-2\"\n                        onClick={() => handleSend(UserName)}\n                      >\n                        Descargar y Enviar Video Respuesta\n                      </button>\n                    )}\n                  </div>\n                </div>\n                <div className=\"row justify-content-center\"></div>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n        {/* <div className=\"row\">\n        <div className=\"col-md-12\">\n          <img src={`${process.env.PUBLIC_URL}/img/Assessment.jpg`} alt=\"Assessment VR - logo\" width=\"500\" />\n        </div>\n      </div> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* const firebaseConfig = {\n  apiKey: \"AIzaSyA3Gkt6AcTUQnbipSfIOEsD3Q9-a-OCosY\",\n  authDomain: \"vr-web-admin.firebaseapp.com\",\n  databaseURL: \"https://vr-web-admin.firebaseio.com\",\n  projectId: \"vr-web-admin\",\n  storageBucket: \"vr-web-admin.appspot.com\",\n  messagingSenderId: \"1043041595425\",\n  appId: \"1:1043041595425:web:edeb929f4faccc32bc7360\",\n}; */\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAMCRd5n-be6H3TmUdwZAUnstxAXRn6I_4\",\n  authDomain: \"vr-derco-admin.firebaseapp.com\",\n  databaseURL: \"https://vr-derco-admin.firebaseio.com\",\n  projectId: \"vr-derco-admin\",\n  storageBucket: \"vr-derco-admin.appspot.com\",\n  messagingSenderId: \"480451728887\",\n  appId: \"1:480451728887:web:511444325186c793684af2\",\n};\n\nexport default firebaseConfig;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport * as firebase from \"firebase\";\nimport firebaseConfig from \"./firebaseConfig\";\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}